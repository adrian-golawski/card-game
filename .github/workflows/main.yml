name: Nx Affected CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - run: git fetch --no-tags --prune --depth=5 origin master
  check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run format:check -- --base=$(git rev-parse HEAD~1)
      - run: npm run affected:lint -- --base=$(git rev-parse HEAD~1)
      - run: npm run affected:test -- --base=$(git rev-parse HEAD~1)
      - run: npm run affected:e2e -- --base=$(git rev-parse HEAD~1)
  build-card-game:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build card-game -- --prod
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: card-game-dist
          path: |
            dist
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/card-game/Dockerfile
          push: true
          tags: panbubr/card-game:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
